/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 ./public/models/uploads/scene.gltf -T -t -o ./public/models/data/20250b4a-bb69-4cce-ae6a-29fe0167c429/su25/scene.tsx -r ./public 
Files: ./public/models/uploads/scene.gltf [330.96KB] > C:\Users\Константин\Documents\page\JavaScript\React\My\vite-3d-store\public\models\data\20250b4a-bb69-4cce-ae6a-29fe0167c429\su25\scene-transformed.glb [2.23MB] (-573%)
Author: Alexios Apokaukos (https://sketchfab.com/Alexios_Apokaukos)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/su25-e1b6ee3af1d94ed19952925e64684335
Title: su25
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_6: THREE.Mesh
    Object_10: THREE.Mesh
    Object_14: THREE.Mesh
    Object_25: THREE.Mesh
    Object_39: THREE.Mesh
    Object_55: THREE.Mesh
    Object_222: THREE.Mesh
    Object_244: THREE.Mesh
    Object_314: THREE.Mesh
  }
  materials: {
    Material_6: THREE.MeshStandardMaterial
    Material_7: THREE.MeshStandardMaterial
    Material_1: THREE.MeshStandardMaterial
    Material_2: THREE.MeshStandardMaterial
    Material_8: THREE.MeshStandardMaterial
    Material_4: THREE.MeshPhysicalMaterial
    Material_5: THREE.MeshStandardMaterial
    Material_3: THREE.MeshStandardMaterial
    Material_0: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/data/20250b4a-bb69-4cce-ae6a-29fe0167c429/su25/scene-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Object_6.geometry} material={materials.Material_6} position={[-2.737, 1.474, -0.196]} rotation={[-0.014, -Math.PI / 2, 0]} scale={0.77} />
      <mesh geometry={nodes.Object_10.geometry} material={materials.Material_7} position={[0, 1.547, 2.558]} rotation={[-1.628, 0, -Math.PI / 2]} scale={0.77} />
      <mesh geometry={nodes.Object_14.geometry} material={materials.Material_1} position={[0.572, 1.474, -0.3]} rotation={[-1.663, 0, 0]} scale={0.77} />
      <mesh geometry={nodes.Object_25.geometry} material={materials.Material_2} position={[3.344, 1.715, -1.4]} rotation={[1.86, -0.059, 1.536]} scale={0.77} />
      <mesh geometry={nodes.Object_39.geometry} material={materials.Material_8} position={[0, 1.696, 0.124]} rotation={[-1.628, 0, -Math.PI / 2]} scale={0.77} />
      <mesh geometry={nodes.Object_55.geometry} material={materials.Material_4} position={[0, 1.696, 0.124]} rotation={[-1.628, 0, -Math.PI / 2]} scale={0.77} />
      <mesh geometry={nodes.Object_222.geometry} material={materials.Material_5} position={[0.089, 2.285, -4.521]} rotation={[1.513, -0.925, -Math.PI / 2]} scale={[-0.77, 0.77, 0.77]} />
      <mesh geometry={nodes.Object_244.geometry} material={materials.Material_3} position={[-0.169, 2.318, 3.044]} rotation={[-1.304, -0.316, 0]} scale={0.77} />
      <mesh geometry={nodes.Object_314.geometry} material={materials.Material_0} position={[0, 1.696, 0.124]} rotation={[-1.628, 0, -Math.PI / 2]} scale={0.77} />
    </group>
  )
}

useGLTF.preload('/models/data/20250b4a-bb69-4cce-ae6a-29fe0167c429/su25/scene-transformed.glb')
